// SPDX-License-Identifier: Apache-2.0
// SPDX-FileCopyrightText: 2024-Present Harry Randazzo

// Package main is the entrypoint for generating words/gen.go from /usr/share/dict/words
package main

import (
	"bufio"
	"os"
	"strings"
	"text/template"
)

func main() {
	f, err := os.Open("/usr/share/dict/words")
	if err != nil {
		panic(err)
	}

	var words []string

	scanner := bufio.NewScanner(f)

	for scanner.Scan() {
		line := scanner.Text()

		stripped := strings.Trim(line, " ")
		if strings.Contains(stripped, "'") || len(stripped) < 3 {
			continue
		}

		words = append(words, stripped)
	}

	tmpl := template.New("words")

	tmpl, err = tmpl.Parse(`// SPDX-License-Identifier: Apache-2.0
// SPDX-FileCopyrightText: 2024-Present Harry Randazzo

package words

// generated by go run gen/main.go > words/gen.go DO NOT EDIT

var ALL = [{{ len . }}]string{ {{range $word := .}}
	"{{$word}}",{{end}}
}
`)
	if err != nil {
		panic(err)
	}

	if err := tmpl.Execute(os.Stdout, words); err != nil {
		panic(err)
	}
}
